//연속으로 3개의 계단을 오를 수 없으므로 n-2이거나 n-1,n-3을 고려해야 함
//n-2와 n-3의 경우는 재귀함수를 호출하지만 n-1은 단순히 값만 더해야 함
//dp(n-1)을 호출하게 되면 dp(n-2)도 호출이 됨 => dp(n-2), dp(n-1), dp(n)이 모두 선택되는 경우가 발생할 수 있음
import java.util.Scanner;

public class Main {
	static int[] arr;
	static int[] score;
	
	public static int dp(int n) {
		if(score[n] == -1) {
			score[n] = Math.max(dp(n-2), dp(n-3)+arr[n-1]) + arr[n]; 
		}
		return score[n];
	}
	
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int n = s.nextInt();
		arr = new int[n+1];
		score = new int[n+1];
		
		for(int i=1; i<=n; i++) {
			arr[i] = s.nextInt();
			score[i] = -1;
		}
		score[0] = 0;
		score[1] = arr[1];
		if(n>=2)
			score[2] = arr[1] + arr[2];
		
		System.out.println(dp(n));
	}
}
