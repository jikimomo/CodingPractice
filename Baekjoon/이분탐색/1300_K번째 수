/*구글링해서 해결한 문제*/
/*
n==3인 경우
1 2 3 4 5 6 7 8 9
1 2 2 3 3 4 6 6 9
k==7일 때 값들은 7보다 작음 -> end를 k

count는 mid값 보다 작은 수의 개수
mid == 4 일 때
min(4/1, 3) = 3 -> 1줄에 4보다 작은 수가 3개
min(4/2, 3) = 2 -> 2줄에 4보다 작은 수가 2개
min(4/3, 3) = 1 -> 3줄에 4보다 작은 수가 1
*/

import java.util.Scanner;

public class Main {
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int n = s.nextInt();
		int k = s.nextInt();
		
		int start = 1, end = k;
		int mid = 0, count = 0;
		int result = 0;
		while(start<=end) {
			mid = (start+end)/2;
			count = 0;
			for(int i=1; i<=n; i++)
				count += Math.min(mid/i, n);
			
			if(count < k)
				start = mid+1;
			else {
				result = mid;
				end = mid-1;
			}
		}
		System.out.println(result);
	}
}
