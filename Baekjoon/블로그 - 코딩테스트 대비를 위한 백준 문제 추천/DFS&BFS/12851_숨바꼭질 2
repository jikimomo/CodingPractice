import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static int k;
	static int[] count = new int[100001];
	static ArrayList<Integer> list = new ArrayList<>();
	
	public static void dfs(int n) {
		Queue<Integer> queue = new LinkedList<>();
		queue.add(n);
		count[n] = 1;
		
		while(!queue.isEmpty()) {
			int num = queue.remove();
			
			if(num == k) {
				if(!list.isEmpty()) {
					if(list.get(0) < count[k])
						break;
				}
				list.add(count[k]);
			}
			
			int next[] = {num-1, num+1, num*2};
			for(int i=0; i<3; i++) {
				if(next[i]>=0 && next[i]<=100000) {
					if(count[next[i]]==0 || count[next[i]]==count[num]+1) {
						queue.add(next[i]);
						count[next[i]] = count[num]+1;
					}
				}
			}
		}
	}
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int n = s.nextInt();
		k = s.nextInt();
		
		dfs(n);
			
		System.out.println(list.get(0)-1);
		System.out.println(list.size());
	}
}
