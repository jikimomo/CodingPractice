import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Main {
	static int n, m;
	static int[][] map;
	static boolean[][] check;
	static int white = 0, blue = 0;
	static int[] dir1 = {1, 0, -1, 0};
	static int[] dir2 = {0, 1, 0, -1};
	
	public static void dfs(int x, int y, int color) {
		Queue<Integer> q1 = new LinkedList<>();
		Queue<Integer> q2 = new LinkedList<>();
		q1.add(x);
		q2.add(y);
		check[x][y] = true;
		
		int count = 1;
		while(!q1.isEmpty() && !q2.isEmpty()) {
			int curX = q1.remove();
			int curY = q2.remove();
			for(int i=0; i<4; i++) {
				int xx = curX + dir1[i];
				int yy = curY + dir2[i];
				if(xx>=0&&yy>=0&&xx<m&&yy<n && !check[xx][yy] && map[xx][yy]==color) {
					q1.add(xx);
					q2.add(yy);
					check[xx][yy] = true;
					count++;
				}
			}
		}
		if(color == 1)
			white += Math.pow(count, 2);
		else
			blue += Math.pow(count, 2);
	}
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		n = s.nextInt();
		m = s.nextInt();
		s.nextLine();
		
		check = new boolean[m][n];
		map = new int[m][n];
		for(int i=0; i<m; i++) {
			String input = s.nextLine();
			for(int j=0; j<n; j++) {
				if(input.charAt(j) == 'W') { //흰색 == 1
					map[i][j] = 1;
				} else {
					map[i][j] = 0; //파란색 == 0
				}
			}
		}

		for(int i=0; i<m; i++) {
			for(int j=0; j<n; j++) {
				if(!check[i][j] && map[i][j] == 1)
					dfs(i, j, 1);
				else if(!check[i][j] && map[i][j] == 0)
					dfs(i, j, 0);
			}
		}
		System.out.println(white+" "+blue);
	}
}
