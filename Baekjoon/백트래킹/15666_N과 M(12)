import java.util.Scanner;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.util.Iterator;

public class Main {
	static int n, m;
	static int[] arr;
	static int[] result;
	static boolean[] check;
	static LinkedHashSet<String> list;
	
	public static void dfs(int depth) {
		if(depth == m) {
			StringBuilder tmp = new StringBuilder();
			for(int i=0; i<m; i++)
				tmp.append(result[i]).append(" ");
			list.add(tmp.toString());
			return;
		}
		for(int i=0; i<n; i++) {
			if(depth == 0) {
				result[depth] = arr[i];
				dfs(depth+1);
			}
			else {
				if(result[depth-1] <= arr[i]) {
					result[depth] = arr[i];
					dfs(depth+1);
				}
			}
		}
	}
    
	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		n = s.nextInt();
		m = s.nextInt();
		arr = new int[n];
		result = new int[m];
		check = new boolean[n];
		list = new LinkedHashSet<>();
		for(int i=0; i<n; i++)
			arr[i] = s.nextInt();
		
		Arrays.sort(arr);
		dfs(0);
		
		Iterator<String> it = list.iterator();
		while(it.hasNext())
			System.out.println(it.next());
	}
}
