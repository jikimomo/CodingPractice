import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main {
	static int n;
	static int[][] map;
	static boolean[][] check;
	
	static int[] dir1 = {1, 0, -1, 0};
	static int[] dir2 = {0, 1, 0, -1};

	public static boolean isOK(int x, int y) {
		if(x>=0 && y>=0 && x<n && y<n)
			return true;
		else
			return false;
	}
	public static void color(int x, int y, int color) {
		check[x][y] = true;
		
		for(int i=0; i<4; i++) {
			int nextX = x+dir1[i];
			int nextY = y+dir2[i];
			if(isOK(nextX, nextY) && !check[nextX][nextY]) {
				if(map[nextX][nextY]==color)
					color(nextX, nextY, map[nextX][nextY]);
			}
		}
		
	}
	
	public static void colorWeakness(int x, int y, int color) {
		check[x][y] = true;
		
		for(int i=0; i<4; i++) {
			int nextX = x+dir1[i];
			int nextY = y+dir2[i];
			
			if(isOK(nextX, nextY) && !check[nextX][nextY]) {
				if(map[nextX][nextY]==color || map[nextX][nextY]*color>0) {
					colorWeakness(nextX, nextY, map[nextX][nextY]);
				}
			}
		}
	}

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		n = Integer.parseInt(br.readLine());
		map = new int[n][n];
		
		for(int i=0; i<n; i++) {
			String input = br.readLine();
			for(int j=0; j<n; j++) {
				if(input.charAt(j)=='R') { //1
					map[i][j] = 1;
				}
				else if(input.charAt(j)=='G') { //2
					map[i][j] = 2;
				}
				else if(input.charAt(j)=='B') { //-1
					map[i][j] = -1;
				}
			}
		}
		
		int result1 = 0;
		check = new boolean[n][n];
		for(int i=0; i<n; i++) {
			for(int j=0; j<n; j++) {
				if(!check[i][j]) {
					result1++;
					color(i, j, map[i][j]);
				}
			}
		}
		
		int result2 = 0;
		check = new boolean[n][n];
		for(int i=0; i<n; i++) {
			for(int j=0; j<n; j++) {
				if(!check[i][j]) {
					result2++;
					colorWeakness(i, j, map[i][j]);
				}
			}
		}
		
		System.out.println(result1+" "+result2);
	}
}
