import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

public class Main {
	static Integer[][] max; //얻을 수 있는 기쁨에 대한 최대값
	static int[] capacity, pleasure;
	
	public static int dp(int i, int cap) {
		if(i < 0)
			return 0;
		if(max[i][cap] == null) {
			if(capacity[i] > cap)
				max[i][cap] = dp(i-1, cap);
			else
				max[i][cap] = Math.max(dp(i-1, cap), dp(i-1, cap-capacity[i])+pleasure[i]);
		}
		return max[i][cap];
	}
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = null;
		
		int n = Integer.parseInt(br.readLine());
		capacity = new int[n];
		pleasure = new int[n];
		st = new StringTokenizer(br.readLine());
		for(int i=0; i<n; i++)
			capacity[i] = Integer.parseInt(st.nextToken());
		st = new StringTokenizer(br.readLine());
		for(int i=0; i<n; i++)
			pleasure[i] = Integer.parseInt(st.nextToken());
		
		max = new Integer[n][100]; //100은 최대 체력
				
		bw.write(dp(n-1, 99)+"\n");
		bw.flush();
		bw.close();
		br.close();
	}
}
