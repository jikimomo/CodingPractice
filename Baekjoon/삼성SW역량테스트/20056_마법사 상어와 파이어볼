//문제 이해를 잘 해야함!!
//이동 후 두개 이상의 파이어볼이 존재하면 그 파이어볼들을 4개로 나누는 것!!! -> 4개로 나누는 것이 이동까지 하는 것이 아니라 한 자리에서 4개가 존재
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Main {
	static int N, K;
	static ArrayList<Fireball>[][] fb;
	static ArrayList<Fireball> fblist = new ArrayList<>();
	static int[] dir1 = {-1, -1, 0, 1, 1, 1, 0, -1};
	static int[] dir2 = {0, 1, 1, 1, 0, -1, -1, -1};
	
	static class Fireball{
		int x, y;
		int m, s, d;
		Fireball(int m, int s, int d){
			this.m = m;
			this.s = s;
			this.d = d;
		}
		Fireball(int x, int y, int m, int s, int d){
			this.x = x;
			this.y = y;
			this.m = m;
			this.s = s;
			this.d = d;
		}
	}
	
	public static void move() {
		for(int i=1; i<=N; i++) {
			for(int j=1; j<=N; j++) {
				if(fb[i][j].size() > 0) {
					for(int k=0; k<fb[i][j].size(); k++) {
						int curX = i;
						int curY = j;
						int nextX = curX + dir1[fb[i][j].get(k).d] * fb[i][j].get(k).s;
						int nextY = curY + dir2[fb[i][j].get(k).d] * fb[i][j].get(k).s;
					
						if(nextX <= 0 || nextX%N == 0) 
							nextX = N + nextX % N;
						else if(nextX > N)
							nextX = nextX % N;
					
						if(nextY <= 0 || nextY%N == 0) 
							nextY = N + nextY % N;
						else if(nextY > N)
							nextY = nextY % N;
                        
						fblist.add(new Fireball(nextX, nextY, fb[i][j].get(k).m, fb[i][j].get(k).s, fb[i][j].get(k).d));
					}
					fb[i][j].clear();
				}
			}
		}
		
		int fbSize = fblist.size();
		for(int i=0; i<fbSize; i++) {
			Fireball f = fblist.remove(0);
			int x = f.x;
			int y = f.y;
			fb[x][y].add(new Fireball(f.m, f.s, f.d));
		}
		
		for(int i=1; i<=N; i++) {
			for(int j=1; j<=N; j++) {
				if(fb[i][j].size() > 1) {
					divide(i, j, fb[i][j].size());
				}
			}
		}
	}
	
	public static void divide(int curX, int curY, int size) {
		Fireball f = fb[curX][curY].remove(0);
		int mSum = f.m;
		int sSum = f.s;
		int d = f.d;
		
		for(int i=1; i<size; i++) {
			f = fb[curX][curY].remove(0);
			mSum += f.m;
			sSum += f.s;
			if(d == -1)
				d = -1;
			else if((d%2==0 && f.d%2==1) || (d%2==1 && f.d%2==0)){
				d = -1;
			}
		}
		if(mSum/5 != 0 && d == -1) { //1, 3, 5, 7
			fb[curX][curY].add(new Fireball(mSum/5, sSum/size, 1));
			fb[curX][curY].add(new Fireball(mSum/5, sSum/size, 3));
			fb[curX][curY].add(new Fireball(mSum/5, sSum/size, 5));
			fb[curX][curY].add(new Fireball(mSum/5, sSum/size, 7));
		}
		else if(mSum/5 != 0 && d != -1){ //0, 2, 4, 6
			fb[curX][curY].add(new Fireball(mSum/5, sSum/size, 0));
			fb[curX][curY].add(new Fireball(mSum/5, sSum/size, 2));
			fb[curX][curY].add(new Fireball(mSum/5, sSum/size, 4));
			fb[curX][curY].add(new Fireball(mSum/5, sSum/size, 6));
		}
	}
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		K = Integer.parseInt(st.nextToken());
		
		fb = new ArrayList[N+1][N+1];
		for(int i=1; i<=N; i++) {
			for(int j=1; j<=N; j++)
				fb[i][j] = new ArrayList<>();
		}
		
		for(int i=0; i<M; i++) {
			st = new StringTokenizer(br.readLine());
			int x = Integer.parseInt(st.nextToken());
			int y = Integer.parseInt(st.nextToken());
			int m = Integer.parseInt(st.nextToken());
			int s = Integer.parseInt(st.nextToken());
			int d = Integer.parseInt(st.nextToken());
			
			fb[x][y].add(new Fireball(m, s, d));
		}
		
		int moveCount = 0;
		while(moveCount < K) { 
			moveCount++;
			move();
		}
		
		int sum = 0;
		for(int i=1; i<=N; i++) {
			for(int j=1; j<=N; j++) {
				for(int k=0; k<fb[i][j].size(); k++) {
					sum += fb[i][j].get(k).m;
				}
			}
		}
		System.out.println(sum);
	}
}
