import java.util.*;

class Solution {
    static class node{
        int x, y;
        public node(int x, int y){
            this.x = x;
            this.y = y;
        }
    }
    
    public int isRight(char[][] place, List<node> person){
        
        for(int i=0; i<person.size()-1; i++){
            for(int j=i+1; j<person.size(); j++){
                node a = person.get(i);
                node b = person.get(j);
                
                if(Math.abs(a.x-b.x)+Math.abs(a.y-b.y) == 2){
                    if(a.x == b.x){
                        if(place[a.x][(a.y+b.y)/2] == 'O')
                            return 0;
                    }
                    else if(a.y == b.y){
                        if(place[(a.x+b.x)/2][a.y] == 'O')
                            return 0;
                    }
                    else{
                        if(place[a.x][b.y]=='O' || place[b.x][a.y]=='O')
                            return 0;
                    }
                }
                else if(Math.abs(a.x-b.x)+Math.abs(a.y-b.y) == 1){
                    return 0;
                }
            }
        }
        
        return 1;
    }
    
    public int[] solution(String[][] places) {
        int[] answer = new int[5];
        
        for(int i=0; i<5; i++){
            List<node> person = new LinkedList<>();
            char[][] place = new char[5][5];
            
            for(int h=0; h<5; h++){
                for(int k=0; k<5; k++){
                    place[h][k] = places[i][h].charAt(k);
                    if(place[h][k]=='P')
                        person.add(new node(h, k));
                }
            }
            answer[i] = isRight(place, person);
        }
        
        return answer;
    }
}
